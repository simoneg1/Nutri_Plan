@using Microsoft.AspNetCore.Identity
@inject SignInManager<Nutri_Plan.Models.User> SignInManager
@inject UserManager<Nutri_Plan.Models.User> UserManager

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item dropdown">
            <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                <i class="fas fa-user-circle me-1"></i>
                @{
                    var user = await UserManager.GetUserAsync(User);
                    var userName = user != null ? $"{user.Nome} {user.Cognome}" : User.Identity?.Name;
                }
                @userName
            </a>
            <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="navbarDropdown">
                <li><a class="dropdown-item" asp-page="/Profile/Edit"><i class="fas fa-user-edit me-2"></i>Modifica Profilo</a></li>
                <li><hr class="dropdown-divider"></li>
                <li>
                    <form class="form-inline" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Page("/Account/Login")">
                        <button type="submit" class="dropdown-item"><i class="fas fa-sign-out-alt me-2"></i>Logout</button>
                    </form>
                </li>
            </ul>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-page="/Account/Register">Registrati</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" asp-page="/Account/Login">Accedi</a>
        </li>
    }
</ul>